@model OnTaskV2.Models.ViewModels.TA_Table

<!-- html element for line / bar chart with star, conversion, & traffic-->
<!-- e.g. id = "dayChartSunday", "dayChartMonday", etc-->
<canvas id="dayChart@(Model.InputDate.DayOfWeek)" style="width:600px; height:300px;"></canvas>


<!--Initialize line/ bar chart with conversion, star, & traffic-->
<script type="text/javascript">
    $(document).ready(function () {
        //Create javascript arrays from Model Data
        //Assumes Model is all of the same length
        var labelArray@(Model.InputDate.DayOfWeek) = []; //creates a javascript array for x-axis labels to be used by chart
        @foreach (var t in Model.TimePeriod) //gets the time periods from Model and pushes into javascript array
        {
            @:labelArray@(Model.InputDate.DayOfWeek).push("@t");
        }
        var convArray@(Model.InputDate.DayOfWeek) = []; //creates a javascript array for conversion values to be used by chart
        @foreach (var c in Model.ConversionPercent) //gets the conversion values from Model and pushes into javascript array
        {
            @:convArray@(Model.InputDate.DayOfWeek).push("@((c * 100).ToString("0.##"))");
        }
        var starArray@(Model.InputDate.DayOfWeek) = []; //creates a javascript array for TPLH values to be used by chart
        @foreach (var s in Model.TPLH) //gets the TPLH values from Model and pushes into javascript array
        {
            @:starArray@(Model.InputDate.DayOfWeek).push("@(s.ToString("0.##"))");
        }
        var trafficArray@(Model.InputDate.DayOfWeek) = []; //creates a javascript array for TPLH values to be used by chart
        @foreach (var s in Model.TrafficTY) //gets the traffic values from Model and pushes into javascript array
        {
            @:trafficArray@(Model.InputDate.DayOfWeek).push("@(s.ToString("0"))");
        }
        //
        //Trim zero values from end of arrays
        var trimUnits = 0;
        var position = @(Model.TimePeriod.Count()) - 1;
        while (position >= 0  && convArray@(Model.InputDate.DayOfWeek)[position] == 0 && starArray@(Model.InputDate.DayOfWeek)[position] == 0 && trafficArray@(Model.InputDate.DayOfWeek)[position] == 0)
        {
            trimUnits++;
            position--;
        }
        labelArray@(Model.InputDate.DayOfWeek).splice(position+1,trimUnits);
        trafficArray@(Model.InputDate.DayOfWeek).splice(position+1,trimUnits);
        starArray@(Model.InputDate.DayOfWeek).splice(position+1,trimUnits);
        convArray@(Model.InputDate.DayOfWeek).splice(position+1,trimUnits);

        //
        //Trim zero values from beginning of arrays
        trimUnits = 0;
        position = 0;
        while (position< @(Model.TimePeriod.Count()) && convArray@(Model.InputDate.DayOfWeek)[position] == 0 && starArray@(Model.InputDate.DayOfWeek)[position] == 0 && trafficArray@(Model.InputDate.DayOfWeek)[position] == 0)
        {
            trimUnits++;
            position++;
        }
        labelArray@(Model.InputDate.DayOfWeek).splice(0,trimUnits);
        trafficArray@(Model.InputDate.DayOfWeek).splice(0,trimUnits);
        starArray@(Model.InputDate.DayOfWeek).splice(0,trimUnits);
        convArray@(Model.InputDate.DayOfWeek).splice(0,trimUnits);


        //initiales new chart with id: dayChart[DayOfWeek] (e.g. dayChartSunday, dayChartMonday, etc)
        //creates new variable myChart[DayOfWeek] (e.g. myChartSunday, myChartMonday, etc)
        var myChart@(Model.InputDate.DayOfWeek) = new Chart($("#dayChart@(Model.InputDate.DayOfWeek)"), {
            type: 'bar', //bar chart needed for mixed line/bar charts
            data: {
                labels: labelArray@(Model.InputDate.DayOfWeek), //sets labels to javascript array variable created above
                datasets: [
                    {
                        type: 'line', //changes this data series to line
                        label: "Traffic TY", //label for series, including tooltip when hovering
                        // The actual data for the Traffic data series
                        //sets traffic data to javascript array variable defined above chart initialization
                        data: trafficArray@(Model.InputDate.DayOfWeek),
                        fill: false,
                        backgroundColor: "rgba(255, 99, 132, 0.2)",
                        borderColor: "rgba(255, 99, 132, 1)",
                        borderCapStyle: 'butt',
                        borderDash: [],
                        borderDashOffset: 0.0,
                        borderJoinStyle: 'miter',
                        lineTension: 0.3,
                        pointBackgroundColor: "#fff",
                        pointBorderColor: "rgba(255, 99, 132, 1)",
                        pointBorderWidth: 1,
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: "rgba(255, 99, 132, 0.4)",
                        pointHoverBorderColor: "rgba(255, 99, 132, 1)",
                        pointHoverBorderWidth: 2,
                        pointRadius: 4,
                        pointHitRadius: 10
                    },
                    {
                        type: 'bar',
                        label: "STAR", //label for series, including tooltip when hovering
                        // The actual data for the STAR data series
                        //sets star data to javascript array variable defined above chart initialization
                        data: starArray@(Model.InputDate.DayOfWeek),
                        // The properties below allow an array to be specified to change the value of the item at the given index
                        // String  or array - the bar color
                        backgroundColor: "rgba(54, 162, 235, 0.2)",
                        // String or array - bar stroke color
                        borderColor: "rgba(54, 162, 235, 1)",
                        // Number or array - bar border width
                        borderWidth: 1,
                        // String or array - fill color when hovered
                        hoverBackgroundColor: "rgba(54, 162, 235, 0.4)",
                        // String or array - border color when hovered
                        hoverBorderColor: "rgba(54, 162, 235, 1)",
                        yAxisID: "bar-y-axis", //use the axis with this id
                    },
                    {
                        type: 'bar',
                        label: "Conversion %", //label for series, including tooltip when hovering
                        // The actual data for the Conversion data series
                        //sets conversion data to javascript array variable defined above chart initialization
                        data: convArray@(Model.InputDate.DayOfWeek),
                        // The properties below allow an array to be specified to change the value of the item at the given index
                        // String  or array - the bar color
                        backgroundColor: "rgba(75, 192, 192, 0.2)",
                        // String or array - bar stroke color
                        borderColor: "rgba(75, 192, 192, 1)",
                        // Number or array - bar border width
                        borderWidth: 1,
                        // String or array - fill color when hovered
                        hoverBackgroundColor: "rgba(75, 192, 192, 0.4)",
                        // String or array - border color when hovered
                        hoverBorderColor: "rgba(75, 192, 192, 1)",
                        yAxisID: "bar-y-axis", //use the axis with this id
                    },
                ]
            },
            options: {
                barValueSpacing: 10,
                title: { //overall chart title
                    display: true,
                    text: "Chart - Traffic, Conversion, STAR"
                },
                tooltips: {
                    mode: 'label', //uses dataSeries labels
                },
                responsive: true,
                scales: {
                    xAxes: [{
                        stacked: false,
                    }],
                    yAxes: [{
                        position: 'left', //y-axis for traffic line series
                        stacked: false,
                        ticks: {
                            beginAtZero: true,
                        }
                    }, {
                        id: "bar-y-axis", //y-axis for STAR & Conversion bar series
                        position: 'right',
                        stacked: false,
                        ticks: {
                            beginAtZero: true,
                        },
                        type: 'linear'
                    }]
                }
            }
        });
    });
</script>