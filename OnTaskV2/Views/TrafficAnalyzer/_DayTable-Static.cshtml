@model OnTaskV2.Models.ViewModels.TA_Table

@{ 
    ViewBag.Title = "Labor Optimization Table";
}

<table class="table table-hover trafficAnalyzerDayTable" id="dayTable@(Model.InputDate.DayOfWeek)">
    <thead>
        <tr>
            <th>Time</th>
            <th>Traffic</th>
            <th title="Percent of Daily Traffic">% Traffic</th>
            <th title="Transactions">Trans</th>
            <th title="Conversion Ratio">Conv Ratio</th>
            <th title="Actual Labor Hours">Actl Hrs</th>
            <th title="Shopper To Associate Ratio">STAR</th>
            <th title="Recommended Labor Hours">Recmd Hrs</th>
            <th title="Increase/Reduce Hours">+/- Hours</th>
        </tr>
    </thead>
    <tfoot>
        <tr>
            <th>Total</th>
            <th>@Model.TrafficTY.Sum().ToString("#,##0")</th>
            <th>@Model.TrafficPercent.Sum().ToString("0.##%")</th>
            <th>@Model.Transactions.Sum().ToString("0.##")</th>
            <th>
                @if (Model.TrafficTY.Sum() != 0)
                {
                    <span>@((Model.Transactions.Sum() / Model.TrafficTY.Sum()).ToString("0.##%"))</span>
                }
            </th>
            <th>@Model.ActualHours.Sum().ToString("0.##")</th>
            <th>
                @if (Model.ActualHours.Sum() != 0)
                {
                    <span>@((Model.TrafficTY.Sum() / Model.ActualHours.Sum()).ToString("0.##"))</span>
                }
            </th>
            <th>@Model.RecommendHours.Sum().ToString("0.##")</th>
            <th>@Model.PlusMinusHours.Sum().ToString("0.##")</th>
        </tr>
    </tfoot>
    <tbody>
        @for (int i = 0; i < Model.ActualHours.Count(); i++)
        {
            if (Model.TrafficTY[i] != 0)
            {
                <tr class="@(Model.IsPeakPeriod[i] ? "warning" : "")">
                    <td>@Model.StartTime.Add(new TimeSpan(Model.TimeIncrement.Ticks * i)).ToShortTimeString()</td>
                    <td>@Model.TrafficTY[i].ToString("0.##")</td>
                    <td>@Model.TrafficPercent[i].ToString("0.##%")</td>
                    <td>@Model.Transactions[i].ToString("0.##")</td>
                    <td>@Model.ConversionPercent[i].ToString("0.##%")</td>
                    <td>@Model.ActualHours[i].ToString("0.##")</td>
                    <td>@Model.TPLH[i].ToString("0.##")</td>
                    <td>@Model.RecommendHours[i].ToString("0.##")</td>
                    <td>@Model.PlusMinusHours[i].ToString("0.##")</td>
                </tr>
            }
        }
    </tbody>
</table>

<dl class="dl-horizontal">
    <dt>@Html.DisplayNameFor(model => model.BudgetHours)</dt>
    <dd>@Html.DisplayFor(model => model.BudgetHours)</dd>

    <dt>@Html.DisplayNameFor(model => model.BaseHours)</dt>
    <dd>@Html.DisplayFor(model => model.BaseHours)</dd>

    <dt>@Html.DisplayNameFor(model => model.NonSellHours)</dt>
    <dd>@Html.DisplayFor(model => model.NonSellHours)</dd>

    <dt>@Html.DisplayNameFor(model => model.SellingHours)</dt>
    <dd>@Html.DisplayFor(model => model.SellingHours)</dd>

    <dt>@Html.DisplayNameFor(model => model.TargetSTAR)</dt>
    <dd>@Html.DisplayFor(model => model.TargetSTAR)</dd>
</dl>

<br>

@{Html.RenderPartial("_DayChart_StarConvTraffic", Model);}


<br>

@{Html.RenderPartial("_DayScatterChart_StarConv", Model);}

<!--Initialize dataTable-->
<script type="text/javascript" language=javascript>
    $(document).ready(function () {
         $.fn.dataTable.moment('h:mm A'); //let's dataTable interpret time values for sorting
         $('#dayTable@(Model.InputDate.DayOfWeek)').dataTable({
             "paging": false,
             "searching": false,
             "info": false,
             "columns": [
                { className: "dt-right" },
                { className: "dt-right" },
                { className: "dt-right" },
                { className: "dt-right" },
                { className: "dt-right" },
                { className: "dt-right" },
                { className: "dt-right" },
                { className: "dt-right" },
                { className: "dt-right" }, ]
         });
     });
</script>

<!--Initialize line/ bar chart with conversion, star, & traffic-->
<script type="text/javascript">
    $(document).ready(function () {
        var labelArray@(Model.InputDate.DayOfWeek) = []; //creates a javascript array for x-axis labels to be used by chart
        @foreach (var t in Model.TimePeriod) //gets the time periods from Model and pushes into javascript array
        {
            @:labelArray@(Model.InputDate.DayOfWeek).push("@t");
        }
        var convArray@(Model.InputDate.DayOfWeek) = []; //creates a javascript array for conversion values to be used by chart
        @foreach (var c in Model.ConversionPercent) //gets the conversion values from Model and pushes into javascript array
        {
            @:convArray@(Model.InputDate.DayOfWeek).push("@((c*100).ToString("0.##"))");
        }
        var starArray@(Model.InputDate.DayOfWeek) = []; //creates a javascript array for TPLH values to be used by chart
        @foreach (var s in Model.TPLH) //gets the TPLH valuess from Model and pushes into javascript array
        {
            @:starArray@(Model.InputDate.DayOfWeek).push("@(s.ToString("0.##"))");
        }
        //initiales new chart with id: dayChart[DayOfWeek] (e.g. dayChartSunday, dayChartMonday, etc)
        //creates new variable myChart[DayOfWeek] (e.g. myChartSunday, myChartMonday, etc)
        var myChart@(Model.InputDate.DayOfWeek) = new Chart($("#dayChart@(Model.InputDate.DayOfWeek)"), {
            type: 'bar', //bar chart needed for mixed line/bar charts
            data: {
                labels: labelArray@(Model.InputDate.DayOfWeek), //sets labels to javascript array variable created above
                datasets: [
                    {
                        type: 'line', //changes this data series to line
                        label: "Traffic TY", //label for series, including tooltip when hovering
                        // The actual data for the Traffic data series
                        //sets traffic data to Model.TraffiTY[]
                        //string.Join used to format data as javascript array
                        data: [ @(string.Join(", ", Model.TrafficTY))],
                        fill: false,
                        backgroundColor: "rgba(255, 99, 132, 0.2)",
                        borderColor: "rgba(255, 99, 132, 1)",
                        borderCapStyle: 'butt',
                        borderDash: [],
                        borderDashOffset: 0.0,
                        borderJoinStyle: 'miter',
                        lineTension: 0.3,
                        pointBackgroundColor: "#fff",
                        pointBorderColor: "rgba(255, 99, 132, 1)",
                        pointBorderWidth: 1,
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: "rgba(255, 99, 132, 0.4)",
                        pointHoverBorderColor: "rgba(255, 99, 132, 1)",
                        pointHoverBorderWidth: 2,
                        pointRadius: 4,
                        pointHitRadius: 10
                    },
                    {
                        type: 'bar',
                        label: "STAR", //label for series, including tooltip when hovering
                        // The actual data for the STAR data series
                        //sets star data to javascript array variable defined above chart initialization
                        data: starArray@(Model.InputDate.DayOfWeek),
                        // The properties below allow an array to be specified to change the value of the item at the given index
                        // String  or array - the bar color
                        backgroundColor: "rgba(54, 162, 235, 0.2)",
                        // String or array - bar stroke color
                        borderColor: "rgba(54, 162, 235, 1)",
                        // Number or array - bar border width
                        borderWidth: 1,
                        // String or array - fill color when hovered
                        hoverBackgroundColor: "rgba(54, 162, 235, 0.4)",
                        // String or array - border color when hovered
                        hoverBorderColor: "rgba(54, 162, 235, 1)",
                        yAxisID: "bar-y-axis", //use the axis with this id
                    },
                    {
                        type: 'bar',
                        label: "Conversion %", //label for series, including tooltip when hovering
                        // The actual data for the Conversion data series
                        //sets conversion data to javascript array variable defined above chart initialization
                        data: convArray@(Model.InputDate.DayOfWeek),
                        // The properties below allow an array to be specified to change the value of the item at the given index
                        // String  or array - the bar color
                        backgroundColor: "rgba(75, 192, 192, 0.2)",
                        // String or array - bar stroke color
                        borderColor: "rgba(75, 192, 192, 1)",
                        // Number or array - bar border width
                        borderWidth: 1,
                        // String or array - fill color when hovered
                        hoverBackgroundColor: "rgba(75, 192, 192, 0.4)",
                        // String or array - border color when hovered
                        hoverBorderColor: "rgba(75, 192, 192, 1)",
                        yAxisID: "bar-y-axis", //use the axis with this id
                    },
                ]
            },
            options: {
                barValueSpacing: 10,
                title: { //overall chart title
                    display: true,
                    text: "Chart - Traffic, Conversion, STAR"
                },
                tooltips: {
                    mode: 'label', //uses dataSeries labels
                },
                responsive: true,
                scales: {
                    xAxes: [{
                        stacked: false,
                    }],
                    yAxes: [{
                        position: 'left', //y-axis for traffic line series
                        stacked: false,
                        ticks: {
                            beginAtZero: true,
                        }
                    }, {
                        id: "bar-y-axis", //y-axis for STAR & Conversion bar series
                        position: 'right',
                        stacked: false,
                        ticks: {
                            beginAtZero: true,
                        },
                        type: 'linear'
                    }]
                }
            }
        });
    });
</script>

<!--Initialize line chart with Scheduled Vs Recommended hours-->
<script type="text/javascript">
    $(document).ready(function () {
        var labelDayArray@(Model.InputDate.DayOfWeek) = []; //creates a javascript array for x-axis labels to be used by chart
        @foreach (var t in Model.TimePeriod) //gets the time periods from Model and pushes into javascript array
        {
            @:labelDayArray@(Model.InputDate.DayOfWeek).push("@t");
                }
        var schedDayArray@(Model.InputDate.DayOfWeek) = []; //creates a javascript array for scheduled hours to be used by chart
        @foreach (var a in Model.ActualHours) //gets the actual hours from Model and pushes into javascript array
        {
            @:schedDayArray@(Model.InputDate.DayOfWeek).push("@(a.ToString("0.##"))");
        }
        var recmndDayArray@(Model.InputDate.DayOfWeek) = []; //creates a javascript array for recommended hours to be used by chart
        @foreach (var r in Model.RecommendHours) //gets the recommended hours from Model and pushes into javascript array
        {
            @:recmndDayArray@(Model.InputDate.DayOfWeek).push("@(r.ToString("0.##"))");
        }

        //initiales new chart with id: daySchedChart[DayOfWeek] (e.g. daySchedChartSunday, daySchedChartMonday, etc)
        //creates new variable mySchedChart[DayOfWeek] (e.g. mySchedChartSunday, mySchedChartMonday, etc)
        var mySchedChart@(Model.InputDate.DayOfWeek) = new Chart($("#daySchedChart@(Model.InputDate.DayOfWeek)"), {
            type: 'line', //bar chart needed for mixed line/bar charts
            data: {
                labels: labelDayArray@(Model.InputDate.DayOfWeek), //sets labels to javascript array variable created above
                datasets: [
                    {
                        type: 'line', //changes this data series to line
                        label: "Scheduled", //label for series, including tooltip when hovering
                        // The actual data for the Traffic data series
                        //sets traffic data to Model.TraffiTY[]
                        //string.Join used to format data as javascript array
                        data: schedDayArray@(Model.InputDate.DayOfWeek),
                        fill: true,
                        backgroundColor: "rgba(97, 97, 97, 0.1)",
                        borderColor: "rgba(97, 97, 97, 1)",
                        borderCapStyle: 'butt',
                        borderDash: [],
                        borderDashOffset: 0.0,
                        borderJoinStyle: 'miter',
                        lineTension: 0.3,
                        pointBackgroundColor: "#eee",
                        pointBorderColor: "rgba(97, 97, 97, 1)",
                        pointBorderWidth: 1,
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: "rgba(97, 97, 97, 0.4)",
                        pointHoverBorderColor: "rgba(97, 97, 97, 1)",
                        pointHoverBorderWidth: 2,
                        pointRadius: 4,
                        pointHitRadius: 10
                    },
                    {
                        type: 'line', //changes this data series to line
                        label: "Recommended", //label for series, including tooltip when hovering
                        // The actual data for the Traffic data series
                        //sets traffic data to Model.TraffiTY[]
                        //string.Join used to format data as javascript array
                        data: recmndDayArray@(Model.InputDate.DayOfWeek),
                        fill: true,
                        backgroundColor: "rgba(192, 60, 60, 0.2)",
                        borderColor: "rgba(192, 60, 60, 1)",
                        borderCapStyle: 'butt',
                        borderDash: [],
                        borderDashOffset: 0.0,
                        borderJoinStyle: 'miter',
                        lineTension: 0.3,
                        pointBackgroundColor: "#fff",
                        pointBorderColor: "rgba(192, 60, 60, 1)",
                        pointBorderWidth: 1,
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: "rgba(192, 60, 60, 0.4)",
                        pointHoverBorderColor: "rgba(192, 60, 60, 1)",
                        pointHoverBorderWidth: 2,
                        pointRadius: 4,
                        pointHitRadius: 10
                    }
                ]
            },
            options: {
                title: { //overall chart title
                    display: true,
                    text: "Scheduled & Recommended Hours"
                },
                tooltips: {
                    mode: 'label', //uses dataSeries labels
                },
                responsive: true,
                scales: {
                    xAxes: [{
                        stacked: false,
                    }],
                    yAxes: [{
                        position: 'left', //y-axis for line series
                        display: true,
                        labelString: "Labor Hours",
                        stacked: false,
                        ticks: {
                            beginAtZero: true,
                        }
                    }]
                }
            }
        });
    });
</script>


<!--Initialize scatter chart with conversion, TPLH-->
<script type="text/javascript">
    $(document).ready(function () {
        var scatterArray@(Model.InputDate.DayOfWeek) = [
            @for(int i = 0; i<Model.TimePeriod.Count();i++)
            {
                @:{x: @(Model.TPLH[i].ToString("0.##")) , y: @((Model.ConversionPercent[i] * 100).ToString("0.##")), r: 10},
            }
        ];

        var myScatterChart@(Model.InputDate.DayOfWeek) = new Chart($("#dayScatterChart@(Model.InputDate.DayOfWeek)"), {
            type: 'bubble',
            data: {
                datasets: [{
                    label: 'Scatter Dataset',
                    data: scatterArray@(Model.InputDate.DayOfWeek),
                    backgroundColor:"#FF6384",
                    hoverBackgroundColor: "#FF6384",
                }]
            },
            options: {
                elements: {
                    points: {
                        borderWidth: 1,
                        borderColor: 'rgb(0, 0, 0)'
                    }
                },
                scales: {
                    xAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: "STAR",
                        }
                    }],
                    yAxes: [{
                        scaleLabel: {
                            display: true,
                            labelString: "Conversion %",
                        }
                    }]
                }
            }
        });
    });
</script>